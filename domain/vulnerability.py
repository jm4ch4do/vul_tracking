import datetime as _dt
import typing as _t


class Vulnerability:
    def __init__(
        self,
        vuln_id: str,
        modified: _t.Optional[str] = None,
        updated: _t.Optional[str] = None,
    ) -> None:
        self.vuln_id = vuln_id
        self.modified = self._parse_date(modified)
        self.updated = self._parse_date(updated)

    def _parse_date(self, date_str: _t.Optional[str]) -> _t.Optional[_dt.datetime]:
        if not date_str:
            return None
        try:
            return _dt.datetime.fromisoformat(date_str.replace("Z", "+00:00"))
        except ValueError:
            return None

    def is_recent(self, within_days: int = 90) -> bool:
        if not self.modified:
            return False
        return (_dt.datetime.now(_dt.timezone.utc) - self.modified).days <= within_days

    def format_date(
        self, date: _t.Optional[_dt.datetime], fmt: str = "%Y-%m-%d %H:%M:%S %Z"
    ) -> _t.Optional[str]:
        if not date:
            return None
        return date.strftime(fmt)
